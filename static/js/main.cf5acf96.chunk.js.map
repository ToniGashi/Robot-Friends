{"version":3,"sources":["serviceWorker.js","Components/Card.js","Components/CardList.js","Robots.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["Boolean","window","location","hostname","match","Card","name","email","id","className","alt","src","max-width","max-height","CardList","robots","map","user","i","key","username","SearchBox","props","type","placeholder","onChange","searchChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","result","json","users","filteredRobots","filter","robot","toLowerCase","includes","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf5acf96.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className= 'tc bg-light-red ma2 grow dib dark-blue ba br3'>\r\n\t\t\t<img alt='' src={`https://robohash.org/${id}.png?set=set4`} max-width=\"200\" max-height=\"200\"/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2> {name} </h2>\r\n\t\t\t\t<p> {email} </p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'; \r\n\r\nconst CardList = ( { robots } ) => {\r\n\treturn(\r\n\t\t\t<div className='b--solid'>\r\n\t\t\t\t{\r\n\t\t\t\t\trobots.map((user,i) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card \r\n\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\t\temail={robots[i].email} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\nexport default CardList;","export const robots = [\r\n  {\r\n    id: 1,\r\n    name: 'Tony Jobs',\r\n    username: 'TJ',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  }\r\n];\r\n","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n\treturn (\r\n\t\t<div className ='pa2'>\r\n\t\t\t<input \r\n\t\t\t\ttype='text'\r\n\t\t\t\tplaceholder=\"search cats\"\r\n\t\t\t\tclassName = 'bg-light-green pa2 calisto b--navy br3'\r\n\t\t\t\tonChange = {props.searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style= {{overflowY: 'scroll', border:'1px solid black', height: '500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React from 'react'\r\n\r\nclass ErrorBoundry extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError:false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch() {\r\n\t\tthis.setState({hasError: true});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif(this.state.hasError) {\r\n\t\t\treturn <h1> OOPS. error occurred </h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry","import React from 'react';\r\nimport CardList from '../Components/CardList.js';\r\nimport {robots} from '../Robots.js';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll'\r\nimport ErrorBoundry from '../Components/ErrorBoundry'\r\nimport '../App.css'\r\n\r\n\r\nclass App extends React.Component{\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(result => result.json() )\r\n\t\t\t.then(users => this.setState({robots:users}));\r\n\t\tthis.setState({robots:robots});\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value});\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className='tc '>\r\n\t\t\t\t<h1> Cat Friends </h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './Containers/App'\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}